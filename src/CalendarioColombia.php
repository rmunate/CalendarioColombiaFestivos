<?php

namespace Rmunate\CalendarioColombia;

use DateTime;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CalendarioColombia {

#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║      ATRIBUTOS DEL OBJETO       ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    /* Datos Globales de la Clase */
    protected $yearsAvailable = "2000 - 2030 (Constantemente se irán agregando años, se recibe apoyo y observaciones al email 'raulmauriciounate@gmail.com')";
    protected $timeZone;
    protected $assignedTimeZone;
    /* Atributos Para Manejo de Festivos */
    private $holidays;
    private $query;
    private $typeQuery;
    public  $response;
    /* Atributos para manejo de Fecha */
    private static $date;
    private static $diff;


#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║      CONSTRUCTOR DE LA CLASE    ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    public function __construct(string $timeZone = 'America/Bogota'){

        /* ---- GESTION PORA FESTIVOS  */
        $this->timeZone = $timeZone;
        $this->assignedTimeZone = date_default_timezone_set($timeZone);
        $this->holidays = [
            '2000' => [
                '2000-01-01', '2000-01-02', '2000-01-09', '2000-01-10', '2000-01-16', '2000-01-23', '2000-01-30', '2000-02-06', '2000-02-13', '2000-02-20', '2000-02-27', '2000-03-05', '2000-03-12', '2000-03-19', '2000-03-20', '2000-03-26', '2000-04-02', '2000-04-09', '2000-04-16', '2000-04-20', '2000-04-21', '2000-04-23', '2000-04-30', '2000-05-01', '2000-05-07', '2000-05-14', '2000-05-21', '2000-05-28', '2000-06-04', '2000-06-05', '2000-06-11', '2000-06-18', '2000-06-25', '2000-06-26', '2000-07-02', '2000-07-03', '2000-07-09', '2000-07-16', '2000-07-20', '2000-07-23', '2000-07-30', '2000-08-06', '2000-08-07', '2000-08-13', '2000-08-15', '2000-08-20', '2000-08-27', '2000-09-03', '2000-09-10', '2000-09-17', '2000-09-24', '2000-10-01', '2000-10-08', '2000-10-15', '2000-10-16', '2000-10-22', '2000-10-29', '2000-11-05', '2000-11-06', '2000-11-12', '2000-11-13', '2000-11-19', '2000-11-26', '2000-12-03', '2000-12-08', '2000-12-10', '2000-12-17', '2000-12-24', '2000-12-25', '2000-12-31'
            ],
            '2001' => [
                '2001-01-01', '2001-01-07', '2001-01-08', '2001-01-14', '2001-01-21', '2001-01-28', '2001-02-04', '2001-02-11', '2001-02-18', '2001-02-25', '2001-03-04', '2001-03-11', '2001-03-18', '2001-03-25', '2001-03-26', '2001-04-01', '2001-04-08', '2001-04-12', '2001-04-14', '2001-04-15', '2001-04-22', '2001-04-29', '2001-05-01', '2001-05-06', '2001-05-13', '2001-05-20', '2001-05-27', '2001-05-28', '2001-06-03', '2001-06-10', '2001-06-17', '2001-06-18', '2001-06-24', '2001-07-01', '2001-07-02', '2001-07-08', '2001-07-15', '2001-07-20', '2001-07-22', '2001-07-29', '2001-08-05', '2001-08-07', '2001-08-12', '2001-08-15', '2001-08-19', '2001-08-26', '2001-09-02', '2001-09-09', '2001-09-16', '2001-09-23', '2001-09-30', '2001-10-07', '2001-10-14', '2001-10-15', '2001-10-21', '2001-10-28', '2001-11-04', '2001-11-05', '2001-11-11', '2001-11-12', '2001-11-18', '2001-11-25', '2001-12-02', '2001-12-08', '2001-12-09', '2001-12-16', '2001-12-23', '2001-12-25', '2001-12-30'
            ],
            '2002' => [
                '2002-01-01', '2002-01-06', '2002-01-07', '2002-01-13', '2002-01-20', '2002-01-27', '2002-02-03', '2002-02-10', '2002-02-17', '2002-02-24', '2002-03-03', '2002-03-10', '2002-03-17', '2002-03-24', '2002-03-25', '2002-03-28', '2002-03-29', '2002-03-31', '2002-04-07', '2002-04-14', '2002-04-21', '2002-04-28', '2002-05-01', '2002-05-05', '2002-05-12', '2002-05-13', '2002-05-19', '2002-05-26', '2002-06-02', '2002-06-03', '2002-06-09', '2002-06-16', '2002-06-23', '2002-06-30', '2002-07-01', '2002-07-07', '2002-07-14', '2002-07-20', '2002-07-21', '2002-07-28', '2002-08-04', '2002-08-07', '2002-08-11', '2002-08-15', '2002-08-18', '2002-08-25', '2002-09-01', '2002-09-08', '2002-09-15', '2002-09-22', '2002-09-29', '2002-10-06', '2002-10-13', '2002-10-14', '2002-10-20', '2002-10-27', '2002-11-03', '2002-11-04', '2002-11-10', '2002-11-17', '2002-11-18', '2002-11-24', '2002-12-01', '2002-12-08', '2002-12-15', '2002-12-22', '2002-12-25', '2002-12-29'
            ],
            '2003' => [
                '2003-01-01', '2003-01-05', '2003-01-12', '2003-01-13', '2003-01-19', '2003-01-26', '2003-02-02', '2003-02-09', '2003-02-16', '2003-02-23', '2003-03-02', '2003-03-09', '2003-03-16', '2003-03-23', '2003-03-24', '2003-03-30', '2003-04-06', '2003-04-13', '2003-04-17', '2003-04-18', '2003-04-20', '2003-04-27', '2003-05-01', '2003-05-04', '2003-05-11', '2003-05-18', '2003-05-25', '2003-06-01', '2003-06-02', '2003-06-08', '2003-06-15', '2003-06-22', '2003-06-23', '2003-06-29', '2003-06-30', '2003-07-06', '2003-07-13', '2003-07-20', '2003-07-27', '2003-08-03', '2003-08-07', '2003-08-10', '2003-08-15', '2003-08-17', '2003-08-24', '2003-08-31', '2003-09-07', '2003-09-14', '2003-09-21', '2003-09-28', '2003-10-05', '2003-10-12', '2003-10-13', '2003-10-19', '2003-10-26', '2003-11-01', '2003-11-02', '2003-11-09', '2003-11-16', '2003-11-17', '2003-11-23', '2003-11-30', '2003-12-07', '2003-12-08', '2003-12-14', '2003-12-21', '2003-12-25', '2003-12-28'
            ],
            '2004' => [
                '2004-01-01', '2004-01-02', '2004-01-04', '2004-01-11', '2004-01-12', '2004-01-18', '2004-01-25', '2004-02-01', '2004-02-08', '2004-02-15', '2004-02-22', '2004-02-29', '2004-03-07', '2004-03-14', '2004-03-21', '2004-03-22', '2004-03-28', '2004-04-04', '2004-04-08', '2004-04-09', '2004-04-11', '2004-04-18', '2004-04-25', '2004-05-01', '2004-05-02', '2004-05-09', '2004-05-16', '2004-05-23', '2004-05-24', '2004-05-30', '2004-06-06', '2004-06-13', '2004-06-14', '2004-06-20', '2004-06-27', '2004-07-04', '2004-07-05', '2004-07-11', '2004-07-18', '2004-07-20', '2004-07-25', '2004-08-01', '2004-08-07', '2004-08-08', '2004-08-15', '2004-08-22', '2004-08-29', '2004-09-05', '2004-09-12', '2004-09-19', '2004-09-26', '2004-10-03', '2004-10-10', '2004-10-17', '2004-10-18', '2004-10-24', '2004-10-31', '2004-11-07', '2004-11-08', '2004-11-14', '2004-11-15', '2004-11-21', '2004-11-28', '2004-12-05', '2004-12-08', '2004-12-12', '2004-12-19', '2004-12-25', '2004-12-26'
            ],
            '2005' => [
                '2005-01-01', '2005-01-02', '2005-01-05', '2005-01-09', '2005-01-10', '2005-01-16', '2005-01-23', '2005-01-30', '2005-02-06', '2005-02-13', '2005-02-20', '2005-02-27', '2005-03-06', '2005-03-13', '2005-03-20', '2005-03-21', '2005-03-24', '2005-03-25', '2005-03-27', '2005-04-03', '2005-04-10', '2005-04-17', '2005-04-24', '2005-05-01', '2005-05-08', '2005-05-09', '2005-05-15', '2005-05-22', '2005-05-29', '2005-05-30', '2005-06-05', '2005-06-12', '2005-06-19', '2005-06-26', '2005-07-03', '2005-07-04', '2005-07-08', '2005-07-10', '2005-07-17', '2005-07-20', '2005-07-24', '2005-07-31', '2005-08-07', '2005-08-12', '2005-08-14', '2005-08-15', '2005-08-21', '2005-08-28', '2005-09-04', '2005-09-11', '2005-09-18', '2005-09-25', '2005-10-02', '2005-10-09', '2005-10-16', '2005-10-17', '2005-10-23', '2005-10-30', '2005-11-06', '2005-11-07', '2005-11-13', '2005-11-14', '2005-11-20', '2005-11-27', '2005-12-04', '2005-12-08', '2005-12-11', '2005-12-18', '2005-12-25'
            ],
            '2006' => [
                '2006-01-01', '2006-01-05', '2006-01-06', '2006-01-08', '2006-01-15', '2006-01-22', '2006-01-29', '2006-02-05', '2006-02-12', '2006-02-19', '2006-02-26', '2006-03-05', '2006-03-07', '2006-03-12', '2006-03-19', '2006-03-20', '2006-03-26', '2006-04-02', '2006-04-09', '2006-04-13', '2006-04-14', '2006-04-16', '2006-04-23', '2006-04-30', '2006-05-01', '2006-05-07', '2006-05-14', '2006-05-21', '2006-05-28', '2006-05-29', '2006-06-04', '2006-06-11', '2006-06-18', '2006-06-19', '2006-06-25', '2006-06-26', '2006-07-02', '2006-07-03', '2006-07-09', '2006-07-16', '2006-07-20', '2006-07-23', '2006-07-30', '2006-08-06', '2006-08-07', '2006-08-13', '2006-08-15', '2006-08-20', '2006-08-21', '2006-08-27', '2006-09-01', '2006-09-03', '2006-09-10', '2006-09-17', '2006-09-24', '2006-10-01', '2006-10-08', '2006-10-15', '2006-10-16', '2006-10-22', '2006-10-29', '2006-11-03', '2006-11-05', '2006-11-12', '2006-11-13', '2006-11-19', '2006-11-26', '2006-12-03', '2006-12-08', '2006-12-10', '2006-12-17', '2006-12-24', '2006-12-25', '2006-12-31'
            ],
            '2007' => [
                '2007-01-01', '2007-01-05', '2007-01-07', '2007-01-08', '2007-01-14', '2007-01-21', '2007-01-28', '2007-02-04', '2007-02-07', '2007-02-11', '2007-02-18', '2007-02-25', '2007-03-04', '2007-03-11', '2007-03-18', '2007-03-19', '2007-03-25', '2007-03-26', '2007-04-01', '2007-04-05', '2007-04-06', '2007-04-08', '2007-04-15', '2007-04-22', '2007-04-29', '2007-05-01', '2007-05-04', '2007-05-06', '2007-05-11', '2007-05-13', '2007-05-20', '2007-05-21', '2007-05-27', '2007-06-03', '2007-06-04', '2007-06-10', '2007-06-11', '2007-06-17', '2007-06-18', '2007-06-24', '2007-07-01', '2007-07-02', '2007-07-08', '2007-07-15', '2007-07-20', '2007-07-22', '2007-07-29', '2007-08-01', '2007-08-05', '2007-08-07', '2007-08-12', '2007-08-15', '2007-08-19', '2007-08-20', '2007-08-26', '2007-09-02', '2007-09-09', '2007-09-16', '2007-09-23', '2007-09-30', '2007-10-07', '2007-10-14', '2007-10-15', '2007-10-21', '2007-10-28', '2007-11-04', '2007-11-05', '2007-11-06', '2007-11-11', '2007-11-12', '2007-11-18', '2007-11-25', '2007-12-02', '2007-12-08', '2007-12-09', '2007-12-11', '2007-12-16', '2007-12-23', '2007-12-25', '2007-12-30'
            ],
            '2008' => [
                '2008-01-01', '2008-01-06', '2008-01-07', '2008-01-13', '2008-01-20', '2008-01-27', '2008-02-03', '2008-02-06', '2008-02-10', '2008-02-17', '2008-02-24', '2008-03-02', '2008-03-09', '2008-03-11', '2008-03-16', '2008-03-20', '2008-03-21', '2008-03-23', '2008-03-24', '2008-03-30', '2008-04-06', '2008-04-13', '2008-04-20', '2008-04-27', '2008-05-01', '2008-05-04', '2008-05-05', '2008-05-11', '2008-05-18', '2008-05-25', '2008-05-26', '2008-06-01', '2008-06-08', '2008-06-15', '2008-06-22', '2008-06-29', '2008-06-30', '2008-07-01', '2008-07-06', '2008-07-08', '2008-07-13', '2008-07-20', '2008-07-27', '2008-08-03', '2008-08-07', '2008-08-10', '2008-08-12', '2008-08-15', '2008-08-17', '2008-08-18', '2008-08-24', '2008-08-31', '2008-09-07', '2008-09-14', '2008-09-21', '2008-09-28', '2008-10-05', '2008-10-12', '2008-10-13', '2008-10-19', '2008-10-26', '2008-11-01', '2008-11-02', '2008-11-09', '2008-11-16', '2008-11-17', '2008-11-23', '2008-11-30', '2008-12-07', '2008-12-08', '2008-12-14', '2008-12-21', '2008-12-25', '2008-12-28'
            ],
            '2009' => [
                '2009-01-01', '2009-01-04', '2009-01-05', '2009-01-11', '2009-01-12', '2009-01-18', '2009-01-25', '2009-02-01', '2009-02-08', '2009-02-11', '2009-02-15', '2009-02-22', '2009-03-01', '2009-03-08', '2009-03-15', '2009-03-22', '2009-03-23', '2009-03-29', '2009-04-05', '2009-04-09', '2009-04-10', '2009-04-12', '2009-04-19', '2009-04-26', '2009-05-01', '2009-05-03', '2009-05-10', '2009-05-17', '2009-05-24', '2009-05-25', '2009-05-31', '2009-06-07', '2009-06-14', '2009-06-15', '2009-06-21', '2009-06-22', '2009-06-28', '2009-06-29', '2009-07-05', '2009-07-06', '2009-07-08', '2009-07-12', '2009-07-19', '2009-07-20', '2009-07-26', '2009-08-02', '2009-08-07', '2009-08-09', '2009-08-12', '2009-08-15', '2009-08-16', '2009-08-17', '2009-08-23', '2009-08-30', '2009-09-04', '2009-09-06', '2009-09-13', '2009-09-20', '2009-09-27', '2009-10-04', '2009-10-11', '2009-10-18', '2009-10-19', '2009-10-25', '2009-11-01', '2009-11-08', '2009-11-15', '2009-11-16', '2009-11-22', '2009-11-29', '2009-12-01', '2009-12-06', '2009-12-10', '2009-12-13', '2009-12-20', '2009-12-25', '2009-12-27'
            ],
            '2010' => [
                '2010-01-01', '2010-01-03', '2010-01-04', '2010-01-05', '2010-01-10', '2010-01-11', '2010-01-17', '2010-01-24', '2010-01-31', '2010-02-04', '2010-02-07', '2010-02-14', '2010-02-21', '2010-02-28', '2010-03-07', '2010-03-14', '2010-03-21', '2010-03-22', '2010-03-28', '2010-04-01', '2010-04-02', '2010-04-04', '2010-04-11', '2010-04-18', '2010-04-25', '2010-05-01', '2010-05-02', '2010-05-07', '2010-05-09', '2010-05-16', '2010-05-17', '2010-05-23', '2010-05-30', '2010-06-06', '2010-06-07', '2010-06-13', '2010-06-14', '2010-06-20', '2010-06-27', '2010-07-04', '2010-07-05', '2010-07-06', '2010-07-08', '2010-07-11', '2010-07-18', '2010-07-20', '2010-07-25', '2010-08-01', '2010-08-07', '2010-08-08', '2010-08-12', '2010-08-15', '2010-08-16', '2010-08-22', '2010-08-29', '2010-09-05', '2010-09-12', '2010-09-19', '2010-09-26', '2010-10-03', '2010-10-10', '2010-10-17', '2010-10-18', '2010-10-24', '2010-10-31', '2010-11-01', '2010-11-07', '2010-11-08', '2010-11-14', '2010-11-15', '2010-11-21', '2010-11-28', '2010-12-05', '2010-12-08', '2010-12-12', '2010-12-19', '2010-12-25', '2010-12-26'
            ],
            '2011' => [
                '2011-01-01', '2011-01-02', '2011-01-05', '2011-01-09', '2011-01-10', '2011-01-16', '2011-01-23', '2011-01-30', '2011-02-06', '2011-02-13', '2011-02-20', '2011-02-27', '2011-03-06', '2011-03-13', '2011-03-20', '2011-03-21', '2011-03-22', '2011-03-27', '2011-04-03', '2011-04-07', '2011-04-10', '2011-04-17', '2011-04-21', '2011-04-22', '2011-04-24', '2011-05-01', '2011-05-08', '2011-05-15', '2011-05-17', '2011-05-22', '2011-05-29', '2011-06-05', '2011-06-06', '2011-06-12', '2011-06-19', '2011-06-26', '2011-06-27', '2011-07-03', '2011-07-04', '2011-07-08', '2011-07-10', '2011-07-11', '2011-07-17', '2011-07-20', '2011-07-24', '2011-07-31', '2011-08-07', '2011-08-12', '2011-08-14', '2011-08-15', '2011-08-21', '2011-08-28', '2011-09-04', '2011-09-11', '2011-09-18', '2011-09-25', '2011-10-02', '2011-10-09', '2011-10-16', '2011-10-17', '2011-10-23', '2011-10-30', '2011-11-06', '2011-11-07', '2011-11-13', '2011-11-14', '2011-11-20', '2011-11-24', '2011-11-27', '2011-12-04', '2011-12-08', '2011-12-11', '2011-12-18', '2011-12-25'
            ],
            '2012' => [
                '2012-01-01', '2012-01-05', '2012-01-08', '2012-01-09', '2012-01-15', '2012-01-22', '2012-01-29', '2012-02-05', '2012-02-07', '2012-02-12', '2012-02-19', '2012-02-26', '2012-03-04', '2012-03-11', '2012-03-18', '2012-03-19', '2012-03-25', '2012-03-26', '2012-04-01', '2012-04-05', '2012-04-06', '2012-04-08', '2012-04-15', '2012-04-22', '2012-04-29', '2012-05-01', '2012-05-04', '2012-05-06', '2012-05-11', '2012-05-13', '2012-05-20', '2012-05-21', '2012-05-27', '2012-06-03', '2012-06-04', '2012-06-10', '2012-06-11', '2012-06-17', '2012-06-18', '2012-06-24', '2012-07-01', '2012-07-02', '2012-07-08', '2012-07-15', '2012-07-20', '2012-07-22', '2012-07-29', '2012-08-05', '2012-08-07', '2012-08-12', '2012-08-19', '2012-08-20', '2012-08-26', '2012-09-02', '2012-09-09', '2012-09-16', '2012-09-23', '2012-09-30', '2012-10-07', '2012-10-14', '2012-10-15', '2012-10-21', '2012-10-28', '2012-11-04', '2012-11-05', '2012-11-06', '2012-11-11', '2012-11-12', '2012-11-18', '2012-11-25', '2012-12-02', '2012-12-08', '2012-12-09', '2012-12-11', '2012-12-16', '2012-12-23', '2012-12-25', '2012-12-30'
            ],
            '2013' => [
                '2013-01-01', '2013-01-06', '2013-01-07', '2013-01-13', '2013-01-20', '2013-01-27', '2013-02-03', '2013-02-10', '2013-02-17', '2013-02-24', '2013-03-03', '2013-03-06', '2013-03-10', '2013-03-17', '2013-03-24', '2013-03-25', '2013-03-28', '2013-03-29', '2013-03-31', '2013-04-07', '2013-04-11', '2013-04-14', '2013-04-21', '2013-04-28', '2013-05-01', '2013-05-05', '2013-05-12', '2013-05-13', '2013-05-19', '2013-05-26', '2013-06-02', '2013-06-03', '2013-06-09', '2013-06-16', '2013-06-23', '2013-06-30', '2013-07-01', '2013-07-07', '2013-07-08', '2013-07-14', '2013-07-20', '2013-07-21', '2013-07-28', '2013-08-04', '2013-08-07', '2013-08-11', '2013-08-12', '2013-08-15', '2013-08-18', '2013-08-25', '2013-09-01', '2013-09-08', '2013-09-15', '2013-09-22', '2013-09-29', '2013-10-06', '2013-10-13', '2013-10-14', '2013-10-20', '2013-10-27', '2013-11-03', '2013-11-04', '2013-11-10', '2013-11-11', '2013-11-17', '2013-11-18', '2013-11-24', '2013-12-01', '2013-12-04', '2013-12-08', '2013-12-15', '2013-12-22', '2013-12-25', '2013-12-29'
            ],
            '2014' => [
                '2014-01-01', '2014-01-05', '2014-01-12', '2014-01-13', '2014-01-19', '2014-01-26', '2014-02-02', '2014-02-06', '2014-02-09', '2014-02-16', '2014-02-23', '2014-03-02', '2014-03-09', '2014-03-11', '2014-03-16', '2014-03-23', '2014-03-24', '2014-03-30', '2014-04-06', '2014-04-13', '2014-04-17', '2014-04-18', '2014-04-20', '2014-04-27', '2014-05-04', '2014-05-11', '2014-05-18', '2014-05-25', '2014-06-01', '2014-06-02', '2014-06-08', '2014-06-15', '2014-06-22', '2014-06-23', '2014-06-29', '2014-06-30', '2014-07-06', '2014-07-08', '2014-07-13', '2014-07-20', '2014-07-27', '2014-08-03', '2014-08-07', '2014-08-10', '2014-08-12', '2014-08-13', '2014-08-15', '2014-08-17', '2014-08-24', '2014-08-31', '2014-09-07', '2014-09-14', '2014-09-21', '2014-09-28', '2014-10-05', '2014-10-12', '2014-10-13', '2014-10-19', '2014-10-26', '2014-11-01', '2014-11-02', '2014-11-09', '2014-11-16', '2014-11-17', '2014-11-23', '2014-11-30', '2014-12-07', '2014-12-08', '2014-12-10', '2014-12-14', '2014-12-21', '2014-12-25', '2014-12-28'
            ],
            '2015' => [
                '2015-01-01', '2015-01-04', '2015-01-05', '2015-01-11', '2015-01-12', '2015-01-18', '2015-01-25', '2015-02-01', '2015-02-04', '2015-02-08', '2015-02-11', '2015-02-15', '2015-02-22', '2015-03-01', '2015-03-04', '2015-03-08', '2015-03-15', '2015-03-22', '2015-03-23', '2015-03-29', '2015-04-02', '2015-04-03', '2015-04-05', '2015-04-12', '2015-04-19', '2015-04-26', '2015-05-01', '2015-05-03', '2015-05-10', '2015-05-17', '2015-05-18', '2015-05-24', '2015-05-31', '2015-06-07', '2015-06-08', '2015-06-14', '2015-06-15', '2015-06-21', '2015-06-28', '2015-06-29', '2015-07-05', '2015-07-06', '2015-07-08', '2015-07-12', '2015-07-19', '2015-07-20', '2015-07-26', '2015-08-02', '2015-08-06', '2015-08-07', '2015-08-09', '2015-08-12', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-23', '2015-08-30', '2015-09-06', '2015-09-13', '2015-09-20', '2015-09-27', '2015-10-04', '2015-10-11', '2015-10-18', '2015-10-19', '2015-10-25', '2015-11-01', '2015-11-08', '2015-11-15', '2015-11-16', '2015-11-22', '2015-11-29', '2015-12-01', '2015-12-06', '2015-12-08', '2015-12-10', '2015-12-13', '2015-12-20', '2015-12-25', '2015-12-27'
            ],
            '2016' => [
                '2016-01-01', '2016-01-03', '2016-01-05', '2016-01-10', '2016-01-11', '2016-01-17', '2016-01-24', '2016-01-31', '2016-02-07', '2016-02-14', '2016-02-21', '2016-02-28', '2016-03-06', '2016-03-13', '2016-03-20', '2016-03-21', '2016-03-24', '2016-03-25', '2016-03-27', '2016-04-03', '2016-04-07', '2016-04-10', '2016-04-17', '2016-04-24', '2016-05-01', '2016-05-08', '2016-05-09', '2016-05-15', '2016-05-22', '2016-05-29', '2016-05-30', '2016-06-05', '2016-06-06', '2016-06-12', '2016-06-19', '2016-06-26', '2016-07-03', '2016-07-04', '2016-07-08', '2016-07-10', '2016-07-11', '2016-07-17', '2016-07-20', '2016-07-24', '2016-07-31', '2016-08-07', '2016-08-12', '2016-08-14', '2016-08-15', '2016-08-21', '2016-08-28', '2016-09-04', '2016-09-05', '2016-09-11', '2016-09-18', '2016-09-25', '2016-10-02', '2016-10-09', '2016-10-16', '2016-10-17', '2016-10-23', '2016-10-30', '2016-11-01', '2016-11-06', '2016-11-07', '2016-11-13', '2016-11-14', '2016-11-20', '2016-11-27', '2016-12-04', '2016-12-11', '2016-12-18', '2016-12-25'
            ],
            '2017' => [
                '2017-01-01', '2017-01-05', '2017-01-08', '2017-01-09', '2017-01-15', '2017-01-22', '2017-01-29', '2017-02-05', '2017-02-12', '2017-02-19', '2017-02-26', '2017-03-05', '2017-03-07', '2017-03-12', '2017-03-19', '2017-03-20', '2017-03-26', '2017-04-02', '2017-04-09', '2017-04-13', '2017-04-14', '2017-04-16', '2017-04-23', '2017-04-30', '2017-05-01', '2017-05-07', '2017-05-14', '2017-05-21', '2017-05-28', '2017-05-29', '2017-06-04', '2017-06-11', '2017-06-18', '2017-06-19', '2017-06-25', '2017-06-26', '2017-07-02', '2017-07-03', '2017-07-09', '2017-07-16', '2017-07-20', '2017-07-23', '2017-07-30', '2017-08-06', '2017-08-07', '2017-08-13', '2017-08-15', '2017-08-20', '2017-08-21', '2017-08-27', '2017-09-01', '2017-09-03', '2017-09-10', '2017-09-17', '2017-09-24', '2017-10-01', '2017-10-08', '2017-10-15', '2017-10-16', '2017-10-22', '2017-10-29', '2017-11-05', '2017-11-06', '2017-11-12', '2017-11-13', '2017-11-19', '2017-11-26', '2017-12-03', '2017-12-08', '2017-12-10', '2017-12-17', '2017-12-24', '2017-12-25', '2017-12-31'
            ],
            '2018' => [
                '2018-01-01', '2018-01-05', '2018-01-07', '2018-01-08', '2018-01-14', '2018-01-21', '2018-01-28', '2018-02-04', '2018-02-07', '2018-02-11', '2018-02-18', '2018-02-25', '2018-03-04', '2018-03-11', '2018-03-18', '2018-03-19', '2018-03-25', '2018-03-26', '2018-03-29', '2018-03-30', '2018-04-01', '2018-04-06', '2018-04-08', '2018-04-15', '2018-04-18', '2018-04-19', '2018-04-22', '2018-04-29', '2018-05-01', '2018-05-06', '2018-05-11', '2018-05-13', '2018-05-14', '2018-05-20', '2018-05-27', '2018-06-03', '2018-06-04', '2018-06-10', '2018-06-17', '2018-06-24', '2018-07-01', '2018-07-02', '2018-07-08', '2018-07-15', '2018-07-20', '2018-07-22', '2018-07-29', '2018-08-01', '2018-08-05', '2018-08-07', '2018-08-12', '2018-08-15', '2018-08-19', '2018-08-20', '2018-08-26', '2018-09-02', '2018-09-09', '2018-09-16', '2018-09-23', '2018-09-30', '2018-10-07', '2018-10-14', '2018-10-15', '2018-10-21', '2018-10-28', '2018-11-04', '2018-11-05', '2018-11-06', '2018-11-11', '2018-11-12', '2018-11-18', '2018-11-25', '2018-12-02', '2018-12-08', '2018-12-09', '2018-12-11', '2018-12-16', '2018-12-23', '2018-12-25', '2018-12-30'
            ],
            '2019' => [
                '2019-01-01', '2019-01-06', '2019-01-07', '2019-01-13', '2019-01-20', '2019-01-27', '2019-02-03', '2019-02-10', '2019-02-17', '2019-02-24', '2019-03-03', '2019-03-10', '2019-03-17', '2019-03-24', '2019-03-25', '2019-03-31', '2019-04-05', '2019-04-07', '2019-04-09', '2019-04-10', '2019-04-12', '2019-04-14', '2019-04-18', '2019-04-19', '2019-04-21', '2019-04-28', '2019-05-01', '2019-05-05', '2019-05-12', '2019-05-19', '2019-05-26', '2019-06-02', '2019-06-03', '2019-06-09', '2019-06-16', '2019-06-23', '2019-06-24', '2019-06-30', '2019-07-01', '2019-07-07', '2019-07-14', '2019-07-20', '2019-07-21', '2019-07-28', '2019-08-04', '2019-08-07', '2019-08-11', '2019-08-15', '2019-08-18', '2019-08-19', '2019-08-25', '2019-09-01', '2019-09-08', '2019-09-15', '2019-09-22', '2019-09-29', '2019-10-06', '2019-10-13', '2019-10-14', '2019-10-20', '2019-10-27', '2019-11-03', '2019-11-04', '2019-11-10', '2019-11-17', '2019-11-18', '2019-11-24', '2019-12-01', '2019-12-08', '2019-12-15', '2019-12-22', '2019-12-25', '2019-12-29'
            ],
            '2020' => [
                '2020-01-01', '2020-01-05', '2020-01-12', '2020-01-13', '2020-01-19', '2020-01-26', '2020-02-02', '2020-02-09', '2020-02-16', '2020-02-23', '2020-03-01', '2020-03-08', '2020-03-15', '2020-03-22', '2020-03-23', '2020-03-29', '2020-04-05', '2020-04-09', '2020-04-10', '2020-04-12', '2020-04-19', '2020-04-26', '2020-05-01', '2020-05-03', '2020-05-10', '2020-05-17', '2020-05-24', '2020-05-25', '2020-05-31', '2020-06-07', '2020-06-14', '2020-06-15', '2020-06-21', '2020-06-28', '2020-07-05', '2020-07-06', '2020-07-12', '2020-07-19', '2020-07-20', '2020-07-26', '2020-08-02', '2020-08-07', '2020-08-09', '2020-08-15', '2020-08-16', '2020-08-23', '2020-08-30', '2020-09-06', '2020-09-13', '2020-09-20', '2020-09-27', '2020-10-04', '2020-10-11', '2020-10-18', '2020-10-19', '2020-10-25', '2020-11-01', '2020-11-08', '2020-11-15', '2020-11-16', '2020-11-22', '2020-11-29', '2020-12-06', '2020-12-08', '2020-12-13', '2020-12-20', '2020-12-25', '2020-12-27'
            ],
            '2021' => [
                '2021-01-01', '2021-01-03', '2021-01-10', '2021-01-11', '2021-01-17', '2021-01-24', '2021-01-31', '2021-02-07', '2021-02-14', '2021-02-21', '2021-02-28', '2021-03-07', '2021-03-14', '2021-03-21', '2021-03-22', '2021-03-28', '2021-04-01', '2021-04-02', '2021-04-04', '2021-04-11', '2021-04-18', '2021-04-25', '2021-05-01', '2021-05-02', '2021-05-09', '2021-05-16', '2021-05-17', '2021-05-23', '2021-05-30', '2021-06-06', '2021-06-07', '2021-06-13', '2021-06-14', '2021-06-20', '2021-06-27', '2021-07-04', '2021-07-05', '2021-07-11', '2021-07-18', '2021-07-20', '2021-07-25', '2021-08-01', '2021-08-07', '2021-08-08', '2021-08-15', '2021-08-16', '2021-08-22', '2021-08-29', '2021-09-05', '2021-09-12', '2021-09-19', '2021-09-26', '2021-10-03', '2021-10-10', '2021-10-17', '2021-10-18', '2021-10-24', '2021-10-31', '2021-11-01', '2021-11-07', '2021-11-08', '2021-11-14', '2021-11-15', '2021-11-21', '2021-11-28', '2021-12-05', '2021-12-08', '2021-12-12', '2021-12-19', '2021-12-25', '2021-12-26'
            ],
            '2022' => [
                '2022-01-01', '2022-01-02', '2022-01-09', '2022-01-10', '2022-01-15', '2022-01-16', '2022-01-23', '2022-01-30', '2022-02-06', '2022-02-13', '2022-02-20', '2022-02-27', '2022-03-06', '2022-03-13', '2022-03-20', '2022-03-21', '2022-03-27', '2022-04-03', '2022-04-10', '2022-04-14', '2022-04-15', '2022-04-17', '2022-04-24', '2022-05-01', '2022-05-08', '2022-05-15', '2022-05-22', '2022-05-29', '2022-05-30', '2022-06-04', '2022-06-05', '2022-06-12', '2022-06-17', '2022-06-19', '2022-06-20', '2022-06-26', '2022-06-27', '2022-07-03', '2022-07-04', '2022-07-10', '2022-07-17', '2022-07-20', '2022-07-24', '2022-07-31', '2022-08-07', '2022-08-14', '2022-08-15', '2022-08-21', '2022-08-28', '2022-09-04', '2022-09-11', '2022-09-18', '2022-09-25', '2022-10-02', '2022-10-09', '2022-10-16', '2022-10-17', '2022-10-23', '2022-10-30', '2022-11-06', '2022-11-07', '2022-11-13', '2022-11-14', '2022-11-20', '2022-11-27', '2022-12-04', '2022-12-08', '2022-12-11', '2022-12-18', '2022-12-25'
            ],
            '2023' => [
                '2023-01-01', '2023-01-08', '2023-01-09', '2023-01-15', '2023-01-22', '2023-01-29', '2023-02-05', '2023-02-12', '2023-02-19', '2023-02-26', '2023-03-05', '2023-03-12', '2023-03-19', '2023-03-20', '2023-03-26', '2023-04-02', '2023-04-06', '2023-04-07', '2023-04-09', '2023-04-16', '2023-04-23', '2023-04-30', '2023-05-01', '2023-05-07', '2023-05-14', '2023-05-21', '2023-05-22', '2023-05-28', '2023-06-04', '2023-06-11', '2023-06-12', '2023-06-18', '2023-06-19', '2023-06-25', '2023-07-02', '2023-07-03', '2023-07-09', '2023-07-16', '2023-07-20', '2023-07-23', '2023-07-30', '2023-08-06', '2023-08-07', '2023-08-13', '2023-08-20', '2023-08-21', '2023-08-27', '2023-09-03', '2023-09-10', '2023-09-17', '2023-09-24', '2023-10-01', '2023-10-08', '2023-10-15', '2023-10-16', '2023-10-22', '2023-10-29', '2023-11-05', '2023-11-06', '2023-11-12', '2023-11-13', '2023-11-19', '2023-11-26', '2023-12-03', '2023-12-08', '2023-12-10', '2023-12-17', '2023-12-24', '2023-12-25', '2023-12-31'
            ],
            '2024' => [
                '2024-01-01', '2024-01-07', '2024-01-08', '2024-01-14', '2024-01-21', '2024-01-28', '2024-02-04', '2024-02-11', '2024-02-18', '2024-02-25', '2024-03-03', '2024-03-10', '2024-03-17', '2024-03-24', '2024-03-25', '2024-03-28', '2024-03-29', '2024-03-31', '2024-04-07', '2024-04-14', '2024-04-21', '2024-04-28', '2024-05-01', '2024-05-05', '2024-05-12', '2024-05-13', '2024-05-19', '2024-05-26', '2024-06-02', '2024-06-03', '2024-06-09', '2024-06-10', '2024-06-16', '2024-06-23', '2024-06-30', '2024-07-01', '2024-07-07', '2024-07-14', '2024-07-21', '2024-07-28', '2024-08-04', '2024-08-07', '2024-08-11', '2024-08-18', '2024-08-19', '2024-08-25', '2024-09-01', '2024-09-08', '2024-09-15', '2024-09-22', '2024-09-29', '2024-10-06', '2024-10-13', '2024-10-14', '2024-10-20', '2024-10-27', '2024-11-03', '2024-11-04', '2024-11-10', '2024-11-11', '2024-11-17', '2024-11-24', '2024-12-01', '2024-12-08', '2024-12-15', '2024-12-22', '2024-12-25', '2024-12-29'
            ],
            '2025' => [
                '2025-01-01', '2025-01-05', '2025-01-06', '2025-01-12', '2025-01-19', '2025-01-26', '2025-02-02', '2025-02-09', '2025-02-16', '2025-02-23', '2025-03-02', '2025-03-09', '2025-03-16', '2025-03-23', '2025-03-24', '2025-03-30', '2025-04-06', '2025-04-13', '2025-04-17', '2025-04-18', '2025-04-20', '2025-04-27', '2025-05-01', '2025-05-04', '2025-05-11', '2025-05-18', '2025-05-25', '2025-06-01', '2025-06-02', '2025-06-08', '2025-06-15', '2025-06-22', '2025-06-23', '2025-06-29', '2025-06-30', '2025-07-06', '2025-07-13', '2025-07-20', '2025-07-27', '2025-08-03', '2025-08-07', '2025-08-10', '2025-08-17', '2025-08-18', '2025-08-24', '2025-08-31', '2025-09-07', '2025-09-14', '2025-09-21', '2025-09-28', '2025-10-05', '2025-10-12', '2025-10-13', '2025-10-19', '2025-10-26', '2025-11-02', '2025-11-03', '2025-11-09', '2025-11-16', '2025-11-17', '2025-11-23', '2025-11-30', '2025-12-07', '2025-12-08', '2025-12-14', '2025-12-21', '2025-12-25', '2025-12-28'
            ],
            '2026' => [
                '2026-01-01', '2026-01-04', '2026-01-11', '2026-01-12', '2026-01-18', '2026-01-25', '2026-02-01', '2026-02-08', '2026-02-15', '2026-02-22', '2026-03-01', '2026-03-08', '2026-03-15', '2026-03-22', '2026-03-23', '2026-03-29', '2026-04-02', '2026-04-03', '2026-04-05', '2026-04-12', '2026-04-19', '2026-04-26', '2026-05-01', '2026-05-03', '2026-05-10', '2026-05-17', '2026-05-18', '2026-05-24', '2026-05-31', '2026-06-07', '2026-06-08', '2026-06-14', '2026-06-15', '2026-06-21', '2026-06-28', '2026-06-29', '2026-07-05', '2026-07-12', '2026-07-19', '2026-07-20', '2026-07-26', '2026-08-02', '2026-08-07', '2026-08-09', '2026-08-16', '2026-08-17', '2026-08-23', '2026-08-30', '2026-09-06', '2026-09-13', '2026-09-20', '2026-09-27', '2026-10-04', '2026-10-11', '2026-10-12', '2026-10-18', '2026-10-25', '2026-11-01', '2026-11-02', '2026-11-08', '2026-11-15', '2026-11-16', '2026-11-22', '2026-11-29', '2026-12-06', '2026-12-08', '2026-12-13', '2026-12-20', '2026-12-25', '2026-12-27'
            ],
            '2027' => [
                '2027-01-01', '2027-01-03', '2027-01-10', '2027-01-11', '2027-01-17', '2027-01-24', '2027-01-31', '2027-02-07', '2027-02-14', '2027-02-21', '2027-02-28', '2027-03-07', '2027-03-14', '2027-03-21', '2027-03-22', '2027-03-25', '2027-03-26', '2027-03-28', '2027-04-04', '2027-04-11', '2027-04-18', '2027-04-25', '2027-05-02', '2027-05-09', '2027-05-10', '2027-05-16', '2027-05-23', '2027-05-30', '2027-05-31', '2027-06-06', '2027-06-07', '2027-06-13', '2027-06-20', '2027-06-27', '2027-07-04', '2027-07-05', '2027-07-11', '2027-07-18', '2027-07-20', '2027-07-25', '2027-08-01', '2027-08-08', '2027-08-15', '2027-08-16', '2027-08-22', '2027-08-29', '2027-09-05', '2027-09-12', '2027-09-19', '2027-09-26', '2027-10-03', '2027-10-10', '2027-10-17', '2027-10-18', '2027-10-24', '2027-10-31', '2027-11-01', '2027-11-07', '2027-11-14', '2027-11-15', '2027-11-21', '2027-11-28', '2027-12-05', '2027-12-08', '2027-12-12', '2027-12-19', '2027-12-26'
            ],
            '2028' => [
                '2028-01-02', '2028-01-09', '2028-01-10', '2028-01-16', '2028-01-23', '2028-01-30', '2028-02-06', '2028-02-13', '2028-02-20', '2028-02-27', '2028-03-05', '2028-03-12', '2028-03-19', '2028-03-20', '2028-03-26', '2028-04-02', '2028-04-09', '2028-04-13', '2028-04-14', '2028-04-16', '2028-04-23', '2028-04-30', '2028-05-01', '2028-05-07', '2028-05-14', '2028-05-21', '2028-05-28', '2028-05-29', '2028-06-04', '2028-06-11', '2028-06-18', '2028-06-19', '2028-06-25', '2028-06-26', '2028-07-02', '2028-07-03', '2028-07-09', '2028-07-16', '2028-07-20', '2028-07-23', '2028-07-30', '2028-08-06', '2028-08-07', '2028-08-13', '2028-08-20', '2028-08-21', '2028-08-27', '2028-09-03', '2028-09-10', '2028-09-17', '2028-09-24', '2028-10-01', '2028-10-08', '2028-10-15', '2028-10-16', '2028-10-22', '2028-10-29', '2028-11-05', '2028-11-06', '2028-11-12', '2028-11-13', '2028-11-19', '2028-11-26', '2028-12-03', '2028-12-08', '2028-12-10', '2028-12-17', '2028-12-24', '2028-12-25', '2028-12-31'
            ],
            '2029' => [
                '2029-01-01', '2029-01-07', '2029-01-08', '2029-01-14', '2029-01-21', '2029-01-28', '2029-02-04', '2029-02-11', '2029-02-18', '2029-02-25', '2029-03-04', '2029-03-11', '2029-03-18', '2029-03-19', '2029-03-25', '2029-03-29', '2029-03-30', '2029-04-01', '2029-04-08', '2029-04-15', '2029-04-22', '2029-04-29', '2029-05-01', '2029-05-06', '2029-05-13', '2029-05-14', '2029-05-20', '2029-05-27', '2029-06-03', '2029-06-04', '2029-06-10', '2029-06-11', '2029-06-17', '2029-06-24', '2029-07-01', '2029-07-02', '2029-07-08', '2029-07-15', '2029-07-20', '2029-07-22', '2029-07-29', '2029-08-05', '2029-08-07', '2029-08-12', '2029-08-19', '2029-08-20', '2029-08-26', '2029-09-02', '2029-09-09', '2029-09-16', '2029-09-23', '2029-09-30', '2029-10-07', '2029-10-14', '2029-10-15', '2029-10-21', '2029-10-28', '2029-11-04', '2029-11-05', '2029-11-11', '2029-11-12', '2029-11-18', '2029-11-25', '2029-12-02', '2029-12-09', '2029-12-16', '2029-12-23', '2029-12-25', '2029-12-30'
            ],
            '2030' => [
                '2030-01-01', '2030-01-06', '2030-01-07', '2030-01-13', '2030-01-20', '2030-01-27', '2030-02-03', '2030-02-10', '2030-02-17', '2030-02-24', '2030-03-03', '2030-03-10', '2030-03-17', '2030-03-24', '2030-03-25', '2030-03-31', '2030-04-07', '2030-04-14', '2030-04-18', '2030-04-19', '2030-04-21', '2030-04-28', '2030-05-01', '2030-05-05', '2030-05-12', '2030-05-19', '2030-05-26', '2030-06-02', '2030-06-03', '2030-06-09', '2030-06-16', '2030-06-23', '2030-06-24', '2030-06-30', '2030-07-01', '2030-07-07', '2030-07-14', '2030-07-21', '2030-07-28', '2030-08-04', '2030-08-07', '2030-08-11', '2030-08-18', '2030-08-19', '2030-08-25', '2030-09-01', '2030-09-08', '2030-09-15', '2030-09-22', '2030-09-29', '2030-10-06', '2030-10-13', '2030-10-14', '2030-10-20', '2030-10-27', '2030-11-03', '2030-11-04', '2030-11-10', '2030-11-11', '2030-11-17', '2030-11-24', '2030-12-01', '2030-12-08', '2030-12-15', '2030-12-22', '2030-12-25', '2030-12-29'
            ],

        ];
        /* ---- GESTION POR DIAS  */
        $this->query['date'] = Self::$date ?? null;
        $this->query['diff'] = Self::$diff ?? null;
    }

#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║       SETEO ZONA HORARIA        ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    public static function timezone(string $timeZone = 'America/Bogota'){
        return date_default_timezone_set($timeZone);
    }

#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║             FESTIVOS            ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    /* Iniciar Filtrado por Festivos */
    public static function holidays(){
        return new static();
    }

    /* Creacion Coleccion de Fechas */
    public function arrayHolidays(){
        /* Dar Formato de Salida a los Festivos */
        $data = [];
        foreach ($this->holidays as $year => $arrayDates) {
            foreach ($arrayDates as $key => $date) {
                $netsData['year'] = intval(date('Y', strtotime($date)));
                $netsData['month'] = intval(date('n', strtotime($date)));
                $netsData['day'] = intval(date('j', strtotime($date)));
                $netsData['name'] = date('l', strtotime($date));
                $netsData['full_date'] = date('Y-m-d', strtotime($date));
                array_push($data, $netsData);
            }
        }
        return $data;
    }

    /* Retornar Todos los Festivos organizados por años y meses */
    public function all(){
        $this->typeQuery = 'all';
        $this->response = collect($this->arrayHolidays());
        return $this->response;
    }

    /* Filtrado Por Año */
    public function year(int $valor){
        $this->typeQuery = 'filter';
        $this->query['year'] = $valor;
        return $this;
    }

    /* Filtrado Por Años */
    public function years(array $valores){
        $this->typeQuery = 'filter';
        $this->query['years'] = $valores;
        return $this;
    }

    /* Revisar Redundancia de Consulta */
    public function yearFilterUnification(){
        /* Valores Finales de Consulta */
        $finalData = [];
        if (!empty($this->query['year'])) {
            array_push($finalData, $this->query['year']);
            unset($this->query['year']);
        }
        if (!empty($this->query['years'])) {
            foreach ($this->query['years'] as $key => $value) {
                array_push($finalData, $value);
            }
            /* Eliminacion de los Filtros por separado, unificacion de valores */
            unset($this->query['years']);
        }
        /* Guardar Valor en Objeto */
        $this->query['years'] = $finalData;
    }

    /* Filtrado por Mes */
    public function month(int $valor){
        $this->typeQuery = 'filter';
        $this->query['month'] = $valor;
        return $this;
    }

    /* Filtrado Por Meses */
    public function months(array $valores){
        $this->typeQuery = 'filter';
        $this->query['months'] = $valores;
        return $this;
    }

    /* Revisar Redundancia de Consulta */
    public function monthFilterUnification(){
        /* Valores Finales de Consulta */
        $finalData = [];
        if (!empty($this->query['month'])) {
            array_push($finalData, $this->query['month']);
            unset($this->query['month']);
        }
        if (!empty($this->query['months'])) {
            foreach ($this->query['months'] as $key => $value) {
                array_push($finalData, $value);
            }
            /* Eliminacion de los Filtros por separado, unificacion de valores */
            unset($this->query['months']);
        }
        /* Guardar Valor en Objeto */
        $this->query['months'] = $finalData;
    }

    /* Retorna un Arreglo con las fechas de dias festivos entre dos fechas. */
    public function between(array $dates){
        $this->typeQuery = 'between';
        $between['start'] = date('Y-m-d', strtotime($dates[0]));
        $between['end'] = date('Y-m-d', strtotime($dates[1]));
        $this->query['between'] = $between;
        return $this;
    }

    /* Definir Dias a no incluir */
    public function notInclude(){
        if(count(func_get_args()) > 0){
            $notInclude = [];
            foreach (func_get_args() as $key => $value) {
                $day = strtolower($value);
                if ($day == 'lunes' || $day == 'monday') {
                    array_push($notInclude, 'Monday');
                } else if ($day == 'martes' || $day == 'tuesday') {
                    array_push($notInclude, 'Tuesday');
                } else if ($day == 'miercoles' || $day == 'wednesday') {
                    array_push($notInclude, 'Wednesday');
                } else if ($day == 'jueves' || $day == 'thursday') {
                    array_push($notInclude, 'Thursday');
                } else if ($day == 'viernes' || $day == 'friday') {
                    array_push($notInclude, 'Friday');
                } else if ($day == 'sabado' || $day == 'saturday') {
                    array_push($notInclude, 'Saturday');
                } else if ($day == 'domingo' || $day == 'sunday') {
                    array_push($notInclude, 'Sunday');
                }

            }
        }
        $this->query['not_include'] = $notInclude;
        return $this;
    }

    /* Definir Dias a  incluir */
    public function include(){
        if(count(func_get_args()) > 0){
            $include = [];
            foreach (func_get_args() as $key => $value) {
                $day = strtolower($value);
                if ($day == 'lunes' || $day == 'monday') {
                    array_push($include, 'Monday');
                } else if ($day == 'martes' || $day == 'tuesday') {
                    array_push($include, 'Tuesday');
                } else if ($day == 'miercoles' || $day == 'wednesday') {
                    array_push($include, 'Wednesday');
                } else if ($day == 'jueves' || $day == 'thursday') {
                    array_push($include, 'Thursday');
                } else if ($day == 'viernes' || $day == 'friday') {
                    array_push($include, 'Friday');
                } else if ($day == 'sabado' || $day == 'saturday') {
                    array_push($include, 'Saturday');
                } else if ($day == 'domingo' || $day == 'sunday') {
                    array_push($include, 'Sunday');
                }

            }
        }
        $this->query['include'] = $include;
        return $this;
    }

    /* Retorno de Respuesta */
    public function get(string $type = null){

        if ($this->typeQuery == 'filter') {

            /* Unificacion de valores para consulta */
            $this->yearFilterUnification();
            $this->monthFilterUnification();


            /* Filtrar por Año si existe el valor */
            if ((count($this->query['months']) > 0) || (count($this->query['years']) > 0)) {
                if ((count($this->query['years']) > 0) && (count($this->query['months']) > 0)) {
                    /* Filtrar Por Años y Meses */
                    $this->response = $this->all()->whereIn('year', $this->query['years'])->whereIn('month', $this->query['months']);
                } else if ((count($this->query['years']) > 0)) {
                    /* Filtrar solo por año */
                    $this->response = $this->all()->whereIn('year', $this->query['years']);
                } else if ((count($this->query['months']) > 0)){
                    /* Filtrar solo por meses */
                    $this->response = $this->all()->whereIn('month', $this->query['months']);
                }
            } else {
                /* Retornarlo Todo */
                $this->response = $this->all();
            }

        } else if ($this->typeQuery == 'all'){

            /* Retornar el total de dias festivos */
            $this->response = collect($this->arrayHolidays());

        } else if($this->typeQuery == 'between'){

            /* Retorno de las fechas entre las establecidas por el arreglo */
            $this->response = $this->all()->whereBetween('full_date', [
                $this->query['between']['start'],$this->query['between']['end']
            ]);

        }

        /* Revisar si se define los dias a No incluir */
        if(isset($this->query['not_include'])){
            $this->response = $this->response->whereNotIn('name',$this->query['not_include']);
        }

        /* Revisar si se define los unicos dias a incluir */
        if(isset($this->query['include'])){
            $this->response = $this->response->whereIn('name',$this->query['include']);
        }

        /* Determinar el Tipo de Retorno */
        if (empty($type) || $type == 'all') {
            return $this->response;
        } else if($type == 'year'){
            return $this->response->pluck('year');
        } else if($type == 'month'){
            return $this->response->pluck('month');
        } else if($type == 'day'){
            return $this->response->pluck('day');
        } else if($type == 'full_date'){
            return $this->response->pluck('full_date');
        } else if($type == 'name'){
            return $this->response->pluck('name');
        } else {
            return collect([]);
        }

    }



#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║          GESTION DIA            ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    /* Acciones Por Dias */
    public static function date(string $date){
        Self::$date = date('Y-m-d', strtotime($date));
        return new static();
    }

    /* Valida si un dia es festivo (Domingo o Feriado) */
    public function isHoliday(){
        if (!empty($this->query['date'])) {
            $statament = $this->response = $this->all()->whereIn('full_date', $this->query['date']);
            $this->response = ($statament->count() > 0) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si es un Lunes */
    public function isMonday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 1) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si un dia es Martes */
    public function isTuesday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 2) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si un dia es Miercoles */
    public function isWednesday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 3) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si un dia es Jueves */
    public function isThursday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 4) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si un dia es Viernes */
    public function isFriday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 5) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si un dia es Sabado */
    public function isSaturday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 6) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Valida si un dia es Domingo */
    public function isSunday(){
        if (!empty($this->query['date'])) {
            $this->response = (date('N', strtotime($this->query['date'])) == 7) ? true : false;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna el numero del dia en string conservando el cero al inicio */
    public function getDayString(){
        if (!empty($this->query['date'])) {
            $this->response = date('d', strtotime($this->query['date']));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna el numero del dia en formato numero. */
    public function getDayInt(){
        if (!empty($this->query['date'])) {
            $this->response = intval(date('j', strtotime($this->query['date'])));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna el numero del dia en formato ISO. */
    public function getDayNumberISO(){
        if (!empty($this->query['date'])) {
            $this->response = date('N', strtotime($this->query['date']));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Extrae el numero del año en formato entero */
    public function getDayYear(){
        if (!empty($this->query['date'])) {
            $this->response = intval(date('z', strtotime($this->query['date'])));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna el nombre del dia en Español */
    public function getDayES(){
        if (!empty($this->query['date'])) {
            $day = date('w', strtotime($this->query['date']));
            switch ($day){
                case 0:
                    $this->response = "Domingo";
                    break;
                case 1:
                    $this->response = "Lunes";
                    break;
                case 2:
                    $this->response = "Martes";
                    break;
                case 3:
                    $this->response = "Miércoles";
                    break;
                case 4:
                    $this->response = "Jueves";
                    break;
                case 5:
                    $this->response = "Viernes";
                    break;
                case 6:
                    $this->response = "Sábado";
                    break;
            }
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna el nombre del dia en Ingles */
    public function getDayEN(){
        if (!empty($this->query['date'])) {
            $this->response = date('l', strtotime($this->query['date']));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna la fecha de hoy separo el dia el mes y el año. */
    public function toArray(){
        if (!empty($this->query['date'])) {
            /* Fecha */
            $now = date('d-m-Y', strtotime($this->query['date']));
            //Extrayendo los datos por separado.
            $todayArr['day']    =   substr($now, -10, 2);
            $todayArr['month']  =   substr($now, -7, 2);
            $todayArr['year']   =   substr($now, -4, 4);
            $this->response = $todayArr;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna un Arreglo con los dias hacia adelante */
    public function fixUp(int $amount = 0){
        if (!empty($this->query['date'])) {
            $date = $this->query['date'];
            if ($amount >= 0) {
                $response = [$this->query['date']];
                for ($dayP = 1; $dayP <= $amount; $dayP++) {
                    $date = date("Y-m-d", strtotime($date . " + 1 days"));
                    array_push($response, $date);
                }
            }
            $this->response = $response;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna un Arreglo con los dias hacia atras */
    public function fixDown(int $amount = 0){
        if (!empty($this->query['date'])) {
            $date = $this->query['date'];
            if ($amount >= 0) {
                $response = [$this->query['date']];
                for ($dayP = 1; $dayP <= $amount; $dayP++) {
                    $date = date("Y-m-d", strtotime($date . " - 1 days"));
                    array_push($response, $date);
                }
            }
            $this->response = $response;
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Suma los dias a la fecha establecida */
    public function addDays(int $amount = 0){
        if (!empty($this->query['date'])) {
            $this->response = date("Y-m-d", strtotime($this->query['date'] . " + " . $amount ." days"));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Resta los dias a la fecha establecida */
    public function reduceDays(int $amount = 0){
        if (!empty($this->query['date'])) {
            $this->response = date("Y-m-d", strtotime($this->query['date'] . " - " . $amount ." days"));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Suma los meses a la fecha establecida */
    public function addMonths(int $amount = 0){
        if (!empty($this->query['date'])) {
            $this->response = date("Y-m-d", strtotime($this->query['date'] . " + " . $amount ." month"));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Resta los meses a la fecha establecida */
    public function reduceMonths(int $amount = 0){
        if (!empty($this->query['date'])) {
            $this->response = date("Y-m-d", strtotime($this->query['date'] . " - " . $amount ." month"));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Suma los años a la fecha establecida */
    public function addYears(int $amount = 0){
        if (!empty($this->query['date'])) {
            $this->response = date("Y-m-d", strtotime($this->query['date'] . " + " . $amount ." year"));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Resta los años a la fecha establecida */
    public function reduceYears(int $amount = 0){
        if (!empty($this->query['date'])) {
            $this->response = date("Y-m-d", strtotime($this->query['date'] . " - " . $amount ." year"));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Obtener el numero de la semana en el año en Formato ISO */
    public function getWeekISO(){
        if (!empty($this->query['date'])) {
            $this->response = intval(date("W", strtotime($this->query['date'])));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Permite comprobar si la fecha esta trabajando con la zona de tiempo de Colombia */
    public function getTimeZone(){
        if (!empty($this->query['date'])) {
            $this->response = date("e", strtotime($this->query['date']));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Obtener el nombre del mes en Español */
    public function getMonthES(){

        if (!empty($this->query['date'])) {
            $date = intval(date("n", strtotime($this->query['date'])));
            switch ($date){
                case 1:
                    $this->response = "Enero";
                    break;
                case 2:
                    $this->response = "Febrero";
                    break;
                case 3:
                    $this->response = "Marzo";
                    break;
                case 4:
                    $this->response = "Abril";
                    break;
                case 5:
                    $this->response = "Mayo";
                    break;
                case 6:
                    $this->response = "Junio";
                    break;
                case 7:
                    $this->response = "Julio";
                    break;
                case 8:
                    $this->response = "Agosto";
                    break;
                case 9:
                    $this->response = "Septiembre";
                    break;
                case 10:
                    $this->response = "Octubre";
                    break;
                case 11:
                    $this->response = "Noviembre";
                    break;
                case 12:
                    $this->response = "Diciembre";
                    break;
            }

        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Obtener el nombre del mes en Ingles */
    public function getMonthEN(){
        if (!empty($this->query['date'])) {
            $this->response = date("F", strtotime($this->query['date']));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Obteber el mes en string con cero al inicio. */
    public function getMonthString(){
        if (!empty($this->query['date'])) {
            $this->response = date("m", strtotime($this->query['date']));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Obteber el mes en INT */
    public function getMonthInt(){
        if (!empty($this->query['date'])) {
            $this->response = intval(date("n", strtotime($this->query['date'])));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

    /* Retorna el año en entero. */
    public function getYear(){
        if (!empty($this->query['date'])) {
            $this->response = intval(date("Y", strtotime($this->query['date'])));
        } else {
            $this->response = null;
        }
        return $this->response;
    }

#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║            MISELANIOS           ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    /* Retorna los dias del mes correspondiente al mes y año. */
    public static function getDaysMonth(int $year, int $month){

        /* Si el mes es superior a 12 */
        if ($month > 12) {
            return null;
        }

        /* Mes */
        $lg = strlen($month);
        if ($lg >= 3) {
            return null;
        } elseif ($lg == 2) {
            $month = strval($month);
        } elseif ($lg == 1) {
            $month = "0" . strval($month);
        }

        /* Calculo */
        return intval(date('t',strtotime($year.'-'.$month.'-01')));

    }

    /* Diferencia en fechas. */
    public static function diff(string $date1, string $date2){
        $dates[0] = date('Y-m-d', strtotime($date1));
        $dates[1] = date('Y-m-d', strtotime($date2));
        Self::$diff = $dates;
        return new static();
    }

    /* Formato Diferencia */
    public function output(string $format = null){
        if (isset($this->query['diff'][0]) && $this->query['diff'][1]) {
            /* Validacion Diferencia */
            $datetime1 = date_create($this->query['diff'][0]);
            $datetime2 = date_create($this->query['diff'][1]);
            $contador = date_diff($datetime1, $datetime2);
            $this->response = $contador;

            $this->response = (object) [
                'interval' => (object) [
                    'years' => $this->response->y,
                    'months' => $this->response->m,
                    'days' => $this->response->d,
                    'hours' => $this->response->h,
                    'minutes' => $this->response->i,
                    'seconds' => $this->response->s
                ],
                'total_days' => $this->response->days
            ];

            if ($format == 'interval_years') {
                $this->response = $this->response->interval->years;
            } else if ($format == 'interval_months'){
                $this->response = $this->response->interval->months;
            } else if ($format == 'interval_days'){
                $this->response = $this->response->interval->days;
            } else if ($format == 'interval_hours'){
                $this->response = $this->response->interval->hours;
            } else if ($format == 'interval_minutes'){
                $this->response = $this->response->interval->minutes;
            } else if ($format == 'interval_seconds'){
                $this->response = $this->response->interval->seconds;
            } else if ($format == 'days'){
                $this->response = $this->response->total_days;
            } else {
                $this->response = collect($this->response);
            }

            return $this->response;
        }
    }

#--------------------------╔═════════════════════════════════╗--------------------------#
#--------------------------║           MIGRACIONES           ║--------------------------#
#--------------------------╚═════════════════════════════════╝--------------------------#

    public static function schema(){
        return new static();
    }

    /* Retorna los datos para la migracion de Laravel. */
    public function create(){
        return Schema::create('colombian_calendar', function (Blueprint $table) {
            /* LLave Primaria */
            $table->id();
            /* Datos Objeto */
            $table->integer('year');
            $table->integer('month');
            $table->string('name_month');
            $table->integer('day');
            $table->string('name_day');
            $table->date('full_date');
            /* Adicionales */
            $table->integer('day_year');
            $table->integer('week_iso');
            $table->integer('day_number_iso');
            $table->integer('hollyday')->default(0);
        });
    }

    /* Retorna los datos para la migracion de Laravel. */
    public function drop(){
        return Schema::dropIfExists('colombian_calendar');
    }

    /* Retorna los datos para el Seeder de Laravel. */
    public function seeder(){

        /* Invocación Clase DataTime */
        $start = new DateTime((date('Y', strtotime($this->all()->first()['full_date'])) . "-01-01"));
        $end = new DateTime((date('Y', strtotime($this->all()->last()['full_date'])) . "-12-31"));

        for($i = $start; $i <= $end; $i->modify('+1 day')){

            $dateIteracion = $i->format("Y-m-d");

            DB::table('colombian_calendar')->insert([
                "id" => null,
                "year" => intval(date('Y', strtotime($dateIteracion))),
                "month" => intval(date('n', strtotime($dateIteracion))),
                "name_month" => intval(date('F', strtotime($dateIteracion))),
                "day" => intval(date('j', strtotime($dateIteracion))),
                "name_day" => intval(date('l', strtotime($dateIteracion))),
                "full_date" => $dateIteracion,
                "day_year" => intval(date('z', strtotime($dateIteracion))),
                "week_iso" => intval(date('W', strtotime($dateIteracion))),
                "day_number_iso" => intval(date('N', strtotime($dateIteracion))),
                "hollyday" => ($this->all()->where('full_date', $dateIteracion)->count() > 0) ? 1 : 0
            ]);

        }

    }

}
?>
